<?php

// Date and Time

class WP_Locale {
	var $weekday;
	var $weekday_initial;
	var $weekday_abbrev;

	var $month;
	var $month_abbrev;

	var $meridiem;

	var $text_direction = 'ltr';
	var $locale_vars = array('text_direction');

	function init() {
		// The Weekdays
		$this->weekday[0] = __('Domingo');
		$this->weekday[1] = __('Lunes');
		$this->weekday[2] = __('Martes');
		$this->weekday[3] = __('Mi&eacute;rcoles');
		$this->weekday[4] = __('Jueves');
		$this->weekday[5] = __('Viernes');
		$this->weekday[6] = __('S&aacute;bado');

		// The first letter of each day.  The _%day%_initial suffix is a hack to make
		// sure the day initials are unique.
		$this->weekday_initial[__('Domingo')]    = __('D_Domingo_initial');
		$this->weekday_initial[__('Lunes')]    = __('L_Lunes_initial');
		$this->weekday_initial[__('Martes')]   = __('M_Martes_initial');
		$this->weekday_initial[__('Mi&eacute;rcoles')] = __('X_Mi&eacute;rcoles_initial');
		$this->weekday_initial[__('Jueves')]  = __('J_Jueves_initial');
		$this->weekday_initial[__('Viernes')]    = __('V_Viernes_initial');
		$this->weekday_initial[__('S&aacute;bado')]  = __('S_S&aacute;bado_initial');

		foreach ($this->weekday_initial as $weekday_ => $weekday_initial_) {
			$this->weekday_initial[$weekday_] = preg_replace('/_.+_initial$/', '', $weekday_initial_);
		}

		// Abbreviations for each day.
		$this->weekday_abbrev[__('Domingo')]    = __('Dom');
		$this->weekday_abbrev[__('Lunes')]    = __('Lun');
		$this->weekday_abbrev[__('Martes')]   = __('Mar');
		$this->weekday_abbrev[__('Mi&eacute;rcoles')] = __('Mi&eacute;');
		$this->weekday_abbrev[__('Jueves')]  = __('Jue');
		$this->weekday_abbrev[__('Viernes')]    = __('Vie');
		$this->weekday_abbrev[__('S&aacute;bado')]  = __('S&aacute;b');

		// The Months
		$this->month['01'] = __('Enero');
		$this->month['02'] = __('Febrero');
		$this->month['03'] = __('Marzo');
		$this->month['04'] = __('Abril');
		$this->month['05'] = __('Mayo');
		$this->month['06'] = __('Junio');
		$this->month['07'] = __('Julio');
		$this->month['08'] = __('Agosto');
		$this->month['09'] = __('Septiembre');
		$this->month['10'] = __('Octubre');
		$this->month['11'] = __('Noviembre');
		$this->month['12'] = __('Diciembre');

		// Abbreviations for each month. Uses the same hack as above to get around the
		// 'May' duplication.
		$this->month_abbrev[__('Enero')] = __('Ene_Enero_abbreviation');
		$this->month_abbrev[__('Febrero')] = __('Feb_Febrero_abbreviation');
		$this->month_abbrev[__('Marzo')] = __('Mar_Marzo_abbreviation');
		$this->month_abbrev[__('Abril')] = __('Abr_Abril_abbreviation');
		$this->month_abbrev[__('Mayo')] = __('May_Mayo_abbreviation');
		$this->month_abbrev[__('Junio')] = __('Jun_Junio_abbreviation');
		$this->month_abbrev[__('Julio')] = __('Jul_Julio_abbreviation');
		$this->month_abbrev[__('Agosto')] = __('Ago_Agosto_abbreviation');
		$this->month_abbrev[__('Septiembre')] = __('Sep_Septiembre_abbreviation');
		$this->month_abbrev[__('Octubre')] = __('Oct_Octubre_abbreviation');
		$this->month_abbrev[__('Noviembre')] = __('Nov_Noviembre_abbreviation');
		$this->month_abbrev[__('Diciembre')] = __('Dic_Diciembre_abbreviation');

		foreach ($this->month_abbrev as $month_ => $month_abbrev_) {
			$this->month_abbrev[$month_] = preg_replace('/_.+_abbreviation$/', '', $month_abbrev_);
		}

		// The Meridiems
		$this->meridiem['am'] = __('am');
		$this->meridiem['pm'] = __('pm');
		$this->meridiem['AM'] = __('AM');
		$this->meridiem['PM'] = __('PM');

		// Numbers formatting
		// See http://php.net/number_format

		$trans = _c('number_format_decimals|$decimals argument for http://php.net/number_format, default is 0');
		$this->number_format['decimals'] = ('number_format_decimals' == $trans) ? 0 : $trans;

		$trans = _c('number_format_decimal_point|$dec_point argument for http://php.net/number_format, default is .');
		$this->number_format['decimal_point'] = ('number_format_decimal_point' == $trans) ? '.' : $trans;

		$trans = _c('number_format_thousands_sep|$thousands_sep argument for http://php.net/number_format, default is ,');
		$this->number_format['thousands_sep'] = ('number_format_thousands_sep' == $trans) ? ',' : $trans;

		// Import global locale vars set during inclusion of $locale.php.
		foreach ( $this->locale_vars as $var ) {
			if ( isset($GLOBALS[$var]) )
				$this->$var = $GLOBALS[$var];
		}

	}

	function get_weekday($weekday_number) {
		return $this->weekday[$weekday_number];
	}

	function get_weekday_initial($weekday_name) {
		return $this->weekday_initial[$weekday_name];
	}

	function get_weekday_abbrev($weekday_name) {
		return $this->weekday_abbrev[$weekday_name];
	}

	function get_month($month_number) {
		return $this->month[zeroise($month_number, 2)];
	}

	function get_month_initial($month_name) {
		return $this->month_initial[$month_name];
	}

	function get_month_abbrev($month_name) {
		return $this->month_abbrev[$month_name];
	}

	function get_meridiem($meridiem) {
		return $this->meridiem[$meridiem];
	}

	// Global variables are deprecated. For backwards compatibility only.
	function register_globals() {
		$GLOBALS['weekday']         = $this->weekday;
		$GLOBALS['weekday_initial'] = $this->weekday_initial;
		$GLOBALS['weekday_abbrev']  = $this->weekday_abbrev;
		$GLOBALS['month']           = $this->month;
		$GLOBALS['month_abbrev']    = $this->month_abbrev;
	}

	function WP_Locale() {
		$this->init();
		$this->register_globals();
	}
}

?>
